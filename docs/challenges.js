/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/challeges.js":
/*!**************************!*\
  !*** ./src/challeges.js ***!
  \**************************/
/***/ (() => {

eval("async function getAllChallenges() {\r\n  try {\r\n    const response = await fetch('https://web-2-sabri.onrender.com/all-challenges');\r\n    const { challenges } = await response.json();\r\n\r\n    const challengesList = document.getElementById('challenges-list');\r\n    challengesList.innerHTML = '';\r\n\r\n    challenges.forEach(challenge => {\r\n      const challengeElement = createChallengeElement(challenge);\r\n      challengesList.appendChild(challengeElement);\r\n    });\r\n  } catch (error) {\r\n    console.error('Fout bij ophalen van uitdagingen:', error);\r\n    console.error('Er is een fout opgetreden bij het ophalen van uitdagingen');\r\n  }\r\n}\r\n\r\nfunction createChallengeElement(challenge, showPlayButton) {\r\n  const challengeElement = document.createElement('div');\r\n  challengeElement.classList.add('challenge');\r\n\r\n  const textElement = document.createElement('p');\r\n  textElement.textContent = `Text: ${challenge.text}`;\r\n\r\n  const descriptionElement = document.createElement('p');\r\n  descriptionElement.textContent = `Description: ${challenge.description}`;\r\n\r\n  const datasetElement = document.createElement('p');\r\n  datasetElement.textContent = `Dataset: ${challenge.dataset}`;\r\n\r\n  const pictureElement = document.createElement('img');\r\n  pictureElement.src = challenge.picture;\r\n  pictureElement.alt = 'Challenge Picture';\r\n\r\n  const resultElement = document.createElement('p');\r\n  resultElement.textContent = `Result: ${challenge.result}`;\r\n\r\n  \r\n\r\n  challengeElement.appendChild(textElement);\r\n  challengeElement.appendChild(descriptionElement);\r\n  challengeElement.appendChild(datasetElement);\r\n  challengeElement.appendChild(pictureElement);\r\n  challengeElement.appendChild(resultElement);\r\n  \r\n  if (showPlayButton) {\r\n    const playButton = document.createElement('button');\r\n    playButton.textContent = 'Play';\r\n    playButton.classList.add('delete-button'); \r\n    playButton.addEventListener('click', () => {\r\n    window.location.href = `play-challenge.html?challengeId=${challenge.challengeId}`;\r\n    });\r\n  \r\n    challengeElement.appendChild(playButton);\r\n  }\r\n\r\n  return challengeElement;\r\n}\r\n\r\nasync function createChallenge(event) {\r\n  event.preventDefault();\r\n\r\n  const text = document.getElementById('text').value;\r\n  const description = document.getElementById('description').value;\r\n  const dataset = document.getElementById('dataset').value;\r\n  const image = document.getElementById('image').value;\r\n  const result = document.getElementById('result').value;\r\n\r\n  const userId = localStorage.getItem('userId');\r\n  if (!userId) {\r\n      console.log('Log u eerst in');\r\n      return;\r\n  }\r\n\r\n  try {\r\n      const unsplashResponse = await fetch(`https://api.unsplash.com/photos/random?query=${image}&client_id=GOHJHj66skaIw-s9JfZAChwWNs0xososjIEvNVnfbrQ`);\r\n      const unsplashData = await unsplashResponse.json();\r\n\r\n      if (unsplashResponse.ok) {\r\n          const picture = unsplashData.urls.regular;\r\n          const altDescription = unsplashData.alt_description;\r\n\r\n          const challengeData = {\r\n              text,\r\n              description,\r\n              dataset,\r\n              picture,\r\n              altDescription,\r\n              result,\r\n              userId\r\n          };\r\n\r\n          const response = await fetch('https://web-2-sabri.onrender.com/newChallenges', {\r\n              method: 'POST',\r\n              headers: {\r\n                  'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(challengeData)\r\n          });\r\n\r\n          const {\r\n              message,\r\n              challengeId\r\n          } = await response.json();\r\n\r\n          if (response.ok) {\r\n            const successMessage = document.getElementById('createChallengeMessage');\r\n            successMessage.textContent = 'Challenge created successfully';\r\n            successMessage.classList.add('green');\r\n            const currentChallengeIds = JSON.parse(localStorage.getItem('currentChallengeIds')) || [];\r\n            currentChallengeIds.push(challengeId);\r\n            localStorage.setItem('currentChallengeIds', JSON.stringify(currentChallengeIds));\r\n            document.getElementById('create-challenge-form').reset();\r\n            getAllChallenges();\r\n          } else {\r\n            const errorMessage = document.getElementById('createChallengeMessage');\r\n            errorMessage.textContent = 'Challenge creation failed';\r\n            errorMessage.classList.add('red');\r\n          }\r\n      } else {\r\n          console.error('Error bij het fetchen van de Unplash API');\r\n      }\r\n  } catch (error) {\r\n      console.error('Een fout is opgetreden tijdens het aanmaken van een uitdaging:', error);\r\n      console.error('Een fout is opgetreden tijdens het aanmaken van een uitdaging');\r\n  }\r\n}\r\n\r\nasync function getMyChallenges(userId) {\r\n  try {\r\n    console.log(\"UserId:\", userId);\r\n\r\n    const response = await fetch(`https://web-2-sabri.onrender.com/my-challenges?userId=${userId}`);\r\n    const { challenges } = await response.json();\r\n\r\n    console.log(\"Challenges:\", challenges);\r\n\r\n    const myChallengesList = document.getElementById('my-challenges-list');\r\n    console.log(\"MyChallengesList:\", myChallengesList);\r\n    myChallengesList.innerHTML = '';\r\n\r\n    challenges.forEach(challenge => {\r\n      const challengeElement = createChallengeElement(challenge);\r\n\r\n      const deleteButton = document.createElement('button');\r\n      deleteButton.textContent = 'Delete';\r\n      deleteButton.classList.add('delete-button');\r\n      deleteButton.addEventListener('click', () => {\r\n        deleteChallenge(challenge.challengeId);\r\n      });\r\n\r\n      challengeElement.appendChild(deleteButton);\r\n      myChallengesList.appendChild(challengeElement);\r\n    });\r\n  } catch (error) {\r\n    console.error('Fout bij ophalen van gebruikersuitdagingen:', error);\r\n    console.error('Er is een fout opgetreden bij het ophalen van gebruikersuitdagingen');\r\n  }\r\n}\r\n\r\nasync function deleteChallenge(challengeId) {\r\n  try {\r\n    const response = await fetch(`https://web-2-sabri.onrender.com/deleteChallenge/${challengeId}`, {\r\n      method: 'DELETE'\r\n    });\r\n\r\n    const { message } = await response.json();\r\n\r\n    if (response.ok) {\r\n      console.error(message);\r\n      const currentChallengeIds = JSON.parse(localStorage.getItem('currentChallengeIds')) || [];\r\n      const updatedChallengeIds = currentChallengeIds.filter(id => id !== challengeId);\r\n      localStorage.setItem('currentChallengeIds', JSON.stringify(updatedChallengeIds));\r\n      const userId = localStorage.getItem('userId');\r\n      if (userId) {\r\n        getMyChallenges(userId);\r\n      }\r\n    } else {\r\n      console.error(message);\r\n    }\r\n  } catch (error) {\r\n    console.error('Fout bij verwijderen van uitdaging:', error);\r\n    console.error('Er is een fout opgetreden bij het verwijderen van de uitdaging');\r\n  }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n  const userId = localStorage.getItem('userId');\r\n  if (userId) {\r\n    getMyChallenges(userId);\r\n  }\r\n\r\n  const currentChallengeIds = JSON.parse(localStorage.getItem('currentChallengeIds')) || [];\r\n  await Promise.all(\r\n    currentChallengeIds.map(async challengeId => {\r\n      const response = await fetch(`https://web-2-sabri.onrender.com/challenges/${challengeId}`);\r\n      const challenge = await response.json();\r\n      const challengeElement = createChallengeElement(challenge, true);\r\n      document.getElementById('challenges-list').appendChild(challengeElement);\r\n    })\r\n  );\r\n})\r\n\r\ndocument.getElementById('create-challenge-form').addEventListener('submit', createChallenge);\n\n//# sourceURL=webpack://test/./src/challeges.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/challeges.js"]();
/******/ 	
/******/ })()
;